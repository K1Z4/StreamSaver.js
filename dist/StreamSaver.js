"use strict";function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,r){for(var o=0;o<r.length;o++){var t=r[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(r,o,t){return o&&e(r.prototype,o),t&&e(r,t),r}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(e,r){"undefined"!=typeof module?module.exports=r():"function"==typeof define&&"object"==_typeof(define.amd)?define(r):(void 0).StreamSaver=r()}(0,function(){return function(){function e(){var r=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"./StreamSaverDownloads";if(_classCallCheck(this,e),"https:"!==location.protocol&&"localhost"!==location.hostname)throw Error("StreamSaver.js needs to be served via HTTPS or on localhost");this._serviceWorker,this._onServiceWorkerPromises=[],navigator.serviceWorker.getRegistration(o).then(function(e){return e||navigator.serviceWorker.register("StreamSaverServiceWorker.js",{scope:o})}).then(function(e){e.installing?console.log("Service worker installing"):e.waiting?console.log("Service worker installed"):e.active&&console.log("Service worker active");var o=e.installing||e.waiting||e.active;r._serviceWorker=o,r._onServiceWorkerPromises.forEach(function(e){return e.resolve(o)}),r._onServiceWorkerPromises=[]}).catch(function(e){throw r._onServiceWorkerPromises.forEach(function(r){return r.reject(e)}),r._onServiceWorkerPromises=[],e})}return _createClass(e,[{key:"getServiceWorker",value:function(){var e=this;return new Promise(function(r,o){return e._serviceWorker?r(e._serviceWorker):e._onServiceWorkerPromises.push({resolve:r,reject:o})})}},{key:"createStream",value:function(e,r,o,t){var n=new MessageChannel;return new WritableStream({start:function(t){return this.getServiceWorker().then(function(t){return new Promise(function(i,a){n.port1.onmessage=function(e){if(!e.data)return a("Service worker did not provide download url");var r=document.createElement("a");return r.href=e.data,r.dispatchEvent(new MouseEvent("click")),i()},t.postMessage(JSON.stringify({fileName:e,fileSize:r,contentType:o}),[n.port2])})})},write:function(e){return new Promise(function(r,o){n.port1.postMessage(e),n.port1.onmessage=r})},close:function(){n.port1.postMessage("close")},abort:function(){n.port1.postMessage("abort")}},t)}}],[{key:"supported",get:function(){try{return"serviceWorker"in navigator&&!!new ReadableStream&&!!new WritableStream}catch(e){return!1}}}]),e}()});
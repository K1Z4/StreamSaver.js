"use strict";function generateDownloadUrl(e){return self.registration.scope+"/"+e}var downloads={};(void 0).addEventListener("fetch",function(e){var o=e.request.url;console.log("download requested",o);var n=downloads[o];if(n||console.log("no url matches"),!n)return null;var t={"Content-Disposition":"attachment; filename*=UTF-8''"+n.fileInfo.fileName};console.log("headers:",t),n.fileInfo.contentType&&(t["Content-Type"]=n.fileInfo.contentType),n.fileInfo.fileSize&&(t["Content-Length"]=n.fileInfo.fileSize),e.respondWith(new Response(n.stream,{headers:t})),delete downloads[o]}),self.onmessage=function(e){if(console.log("Creating new download"),console.log("got data from webpage",e),!e.ports[0]||!e.ports[0]instanceof MessagePort)return console.error("Worker recieved message without MessagePort provided");var o=e.ports[0],n=JSON.parse(e.data),t=generateDownloadUrl(n.fileName),a=new ReadableStream({start:function(e){console.log("writer starting, controller:",e),o.onmessage=function(n){var t=n.data;if(t instanceof ArrayBuffer){var a=new Uint8Array(t);e.enqueue(a),o.postMessage("chunk added")}else t instanceof Uint8Array?(e.enqueue(t),o.postMessage("chunk added")):"close"==t?e.close():"abort"==t?e.abort():console.log("Unknown data recieved",t)}},cancel:function(){console.log("aborted")}});downloads[t]={downloadUrl:t,fileInfo:n,messagePort:o,stream:a},o.postMessage(t)};